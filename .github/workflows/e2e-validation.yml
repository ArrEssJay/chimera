name: E2E Test Validation

on:
  pull_request:
    paths:
      - 'chimera-web/src/**'
      - 'chimera-web/tests/e2e/**'
  push:
    branches: [main]

jobs:
  playwright-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./chimera-web
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: chimera-web/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
      
      - name: Build application
        run: npm run build
      
      - name: Start dev server
        run: npm run dev &
      
      - name: Wait for server
        run: npx wait-on http://localhost:3000 --timeout 60000
      
      - name: Run Playwright tests (smoke)
        if: github.event_name == 'pull_request'
        run: npx playwright test --grep @smoke
      
      - name: Run Playwright tests (full)
        if: github.event_name == 'push'
        run: npx playwright test
      
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: chimera-web/playwright-report/
          retention-days: 30
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: chimera-web/test-results/
          retention-days: 7
      
      - name: Comment PR with E2E results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            
            // Check if tests passed by looking for failure indicators
            const testsPassed = process.env.PLAYWRIGHT_TESTS_PASSED === 'true';
            
            const body = `## üé≠ E2E Test Results
            
            ${testsPassed ? '‚úÖ' : '‚ùå'} Playwright tests ${testsPassed ? 'passed' : 'failed'}
            
            **Test Suite:** Smoke tests (critical paths only)
            
            ${testsPassed ? '**Ready to merge!**' : '**Please fix failing tests before merging.**'}
            
            [View full report in artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
  
  lighthouse-audit:
    needs: playwright-tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: ./chimera-web
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: chimera-web/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Start server
        run: npm run preview &
      
      - name: Wait for server
        run: npx wait-on http://localhost:4173 --timeout 60000
      
      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli
          lhci autorun --collect.url=http://localhost:4173 || echo "Lighthouse completed"
      
      - name: Comment PR with Lighthouse results
        if: always()
        uses: actions/github-script@v8
        with:
          script: |
            const body = `## üè† Lighthouse Audit
            
            Performance, Accessibility, Best Practices, and SEO audit completed.
            
            **Target:** All scores ‚â• 90
            
            [View detailed report in artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
