name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly

      - name: Run tests
        run: cargo test --workspace --all-features

  fmt:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check

  clippy:
    name: Run Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: clippy

      - name: Rust version info
        run: |
          rustc --version
          cargo --version
          cargo clippy --version
          echo "Working directory: $(pwd)"
          echo "Files present:"
          ls -la

      - name: Run clippy on lib
        run: cargo clippy --lib --all-features -- -D warnings
        continue-on-error: false

      - name: Run clippy on bins
        run: cargo clippy --bins --all-features -- -D warnings
        continue-on-error: false

      - name: Run clippy on tests
        run: cargo clippy --tests --all-features -- -D warnings
        continue-on-error: false

      - name: Run clippy on workspace (full check)
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

  build-web:
    name: Build Web Dashboard
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          targets: wasm32-unknown-unknown

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-wasm-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-wasm-target-

      - name: Install trunk
        run: cargo install trunk --locked

      - name: Build web dashboard
        working-directory: ./chimera-web
        run: trunk build --release --public-url /chimera

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-dashboard
          path: chimera-web/dist
          retention-days: 7
